@font-face {
  font-family: "Manrope";
  font-style: normal;
  font-display: swap;
  font-weight: 300;
  src: url("/fonts/manrope/Manrope-Light.woff") format("woff");
}
@font-face {
  font-family: "Manrope";
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src: url("/fonts/manrope/Manrope-Regular.woff") format("woff");
}
@font-face {
  font-family: "Manrope";
  font-style: normal;
  font-display: swap;
  font-weight: 500;
  src: url("/fonts/manrope/Manrope-Medium.woff") format("woff");
}
@font-face {
  font-family: "Manrope";
  font-style: normal;
  font-display: swap;
  font-weight: 600;
  src: url("/fonts/manrope/Manrope-SemiBold.woff") format("woff");
}
@font-face {
  font-family: "Manrope";
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src: url("/fonts/manrope/Manrope-Bold.woff") format("woff");
}

html,
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

.walletconnect-qrcode__text {
  margin-bottom: 0.5em !important;
}

.arrow {
  transition: transform 0.5s ease;
  transform: translate(0, 0);
  fill: inherit;

  &.light g,
  .light & g {
    fill: #000;
    stroke: #000;
  }

  .arrowLink & {
    display: inline;
  }

  g path {
    transition: transform 0.5s ease;
    transform: scale(80%, 80%);
  }

  &:hover,
  a:hover & {
    transform: translate(-5px, 0);

    g path:first-child {
      transform: scale(140%, 80%);
    }
  }

  &.down {
    transform: rotate(-90deg);
    transform-origin: center right;

    &:hover {
      transform: rotate(-90deg) translateX(-5px);
    }
  }

  &.up {
    transform: rotate(90deg);
    transform-origin: center right;

    &:hover {
      transform: rotate(90deg) translateX(-5px);
    }
  }

  .arrowLink.to &,
  &.right {
    transform: rotate(-180deg) translate(5px, 2.7px);
    transform-origin: center center;
  }

  .arrowLink.to:hover &,
  &.right:hover {
    transform: rotate(-180deg) translate(0px, 2.7px);
  }
}

.aspect {
  width: 100%;
  height: 0;
  position: relative;
  .ratio {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;

    img,
    picture {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }
  }
}

.editor {
  width: 100%;
  position: relative;

  .menu-bar {
    width: 100%;
    transform: translateX(-0.5rem);
  }

  &.basic {
    border-radius: 0;
    transition: all 0.25s;

    .wrapper {
      min-height: 200px;
      max-height: 500px;
      overflow-y: auto;
    }
    // &.is-focussed {
    //   border-color: var(--chakra-colors-gray-500);
    //   box-shadow: 0 0 0 1px var(--chakra-colors-gray-500);
    // }

    .ProseMirror {
      height: 100%;
      min-height: 100px;
      background-color: transparent;
      overflow-y: auto;
      padding: 0;
      font-family: "Source Code Pro", monospace;
    }
  }

  &.is-error {
    &.basic {
      .ProseMirror p.is-editor-empty:first-child::before,
      .ProseMirror p.is-empty::before {
        color: var(--chakra-colors-openar-error);
      }
    }
  }

  &.has-char-count {
    .ProseMirror {
      padding-bottom: var(--chakra-space-8);
    }
  }
  .char-count {
    position: absolute;
    bottom: 0;
    right: 0;
    //    left: 50%;
    //    transform: translateX(-50%);
    .chakra-badge {
      background: transparent;
      color: #ffffff88;
      &.exceeded {
        color: var(--chakra-colors-openar-error);
      }
    }
    svg {
      display: inline-block;
      color: var(--chakra-colors-openar-error);
    }
  }
}

.ProseMirror {
  overflow-y: auto;
  > * + * {
    margin-top: 0.75em;
  }

  min-height: 100px;
  &:focus {
    outline: none;
  }
}

/* Placeholder (at the top) */
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  opacity: 0.6;
  color: white;
  pointer-events: none;
  height: 0;
}

/* Placeholder (on every new line) */
.ProseMirror p.is-empty::before {
  content: "...";
  float: left;
  color: var(--chakra-colors-gray-200);
  pointer-events: none;
  height: 0;
}

@keyframes loadingAnimationCross {
  0% {
    width: 0%;
    left: 0px;
    right: auto;
  }
  49.99% {
    width: 100%;
    left: 0px;
    right: auto;
  }
  50% {
    width: 100%;
    left: auto;
    right: 0px;
  }
  99.99% {
    width: 0%;
    left: auto;
    right: 0px;
  }
}

.loadingbar {
  display: none;
  width: 0px;
  height: 3px;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 3000;

  &.loading {
    display: block;
    animation: loadingAnimationCross 1.5s infinite;
  }
}

.artwork.item {
  width: 100%;
  display: flex;
  overflow: hidden;

  .info {
    width: 33.333%;
    height: 66.66vw;
    writing-mode: vertical-rl;
    transform: rotate(180deg);
    a::before {
      width: 100vw;
      // background-color: rgba(255,0,0,0.6);
      left: auto;
      right: 0px;
    }
  }

  .img {
    width: 66.666%;

    picture,
    img {
      height: 100%;
      width: 100%;
      object-fit: cover;
      // opacity: 0.6;
    }
    pointer-events: none;
  }

  &:nth-child(2n) {
    flex-direction: row-reverse;

    .editArtworkButton {
      order: -1;
      z-index: 210;
    }
  }

  &:nth-child(2n) {
    .info {
      a::before {
        // background-color: rgba(0,250,0,0.6);
        right: auto;
        left: 0px;
      }
    }
  }
}

@media (min-width: 45rem) and (max-width: 74.999rem) {
  .artwork.item {
    width: 50%;
    display: flex;

    flex-direction: row-reverse;

    .info {
      height: 33.333vw;
      a::before {
        left: 0;
        right: auto;
      }
    }

    &:nth-child(4n + 1),
    &:nth-child(4n + 2) {
      flex-direction: row;
      .info {
        a::before {
          left: auto;
          right: 0;
        }
      }
    }

    &.col-1,
    &.col-1:nth-child(2n) {
      flex-direction: row-reverse;
      .info {
        a::before {
          left: auto;
          right: 0;
        }
      }
    }
  }
}

@media (min-width: 75rem) {
  .artwork.item {
    width: 100%;

    .info {
      height: 22.19vw;
    }

    &.col-1-or-two {
      .info {
        a::before {
          left: auto;
          right: 0;
        }
      }
    }

    &.col-2 {
      width: 50%;
      flex-direction: row-reverse;
    }

    &.col-2:nth-child(4n + 1),
    &.col-2:nth-child(4n + 2) {
      flex-direction: row;
      .info {
        a::before {
          left: auto;
          right: 0;
        }
      }
    }

    &.col-3 {
      width: 33.33%;
      flex-direction: row-reverse;
      .info {
        a::before {
          left: 0;
          right: auto;
        }
      }
    }

    &.col-3:nth-child(6n + 1),
    &.col-3:nth-child(6n + 2),
    &.col-3:nth-child(6n + 3) {
      flex-direction: row;
      .info {
        a::before {
          left: auto;
          right: 0;
        }
      }
    }
  }
}

.artworkDetails,
.userDetails {
  .label {
    margin-bottom: 0.5em;
  }
}

.muted {
  opacity: 0.6;
}

.field-icon {
  float: right;
  margin-top: 3px;
}

/* react-datepicker styling */

.datePicker {
  
  // date picker elements are preceeded by general form error div and label
  div:last-child {

    // Calendar and arrows
    svg {
      color: white;
      fill: white;
    }

    // Form fields
    input,
    button {
      background: var(--chakra-colors-openar-muddygreen);
      border: none;

      &::placeholder {
        font-family: "Source Code Pro", monospace;
        color: white;
        opacity: 0.6;
      }
    }

    label {
      border: none;

      // Calendar icon
      & > div{
        right: 0;
        left: unset;
      }

      // Input field
      div + input{
        padding: 0 40px 0 0px;
        color: white;
      }
    }

    
    //Overlay div
    label + div > div {
      background: var(--chakra-colors-openar-muddygreen);
      border: 1px solid white;

      div {
        color: white;
      }

      button {
        box-shadow: 1px 0 0 0 #ffffff66,
          0 1px 0 0 #ffffff66,
          1px 1px 0 0 #ffffff66,
          1px 0 0 0 #ffffff66 inset,
          0 1px 0 0 #ffffff66 inset;
      }
    }
  }
}
